<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.travel.mapper.StrategyMapper">

    <resultMap id="BaseResultMap" type="com.travel.entity.Strategy">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="strategyIntroduce" jdbcType="VARCHAR" property="strategyIntroduce" />
        <result column="image" jdbcType="VARCHAR" property="image" />
        <result column="isThemeTour" jdbcType="CHAR" property="isThemeTour" />
        <result column="created" jdbcType="VARCHAR" property="created" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.travel.entity.Strategy">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>
    <sql id="Base_Column_List">
    id, title, strategyIntroduce, image, isThemeTour, created
  </sql>


    <sql id="Blob_Column_List">
    content
  </sql>

    <select id="pageQuery" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from strategy
        <where>
            <if test="title != null and title != ''">
                AND title like "%" #{title} "%"
            </if>
            <if test="isThemeTour != null and isThemeTour != ''">
                AND isThemeTour = #{isThemeTour}
            </if>
        </where>
        order by created desc
    </select>

    <select id="getAll" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from strategy
        order by created desc
    </select>
    <select id="getById" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from strategy
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="delete" parameterType="java.lang.String">
    delete from strategy
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.travel.entity.Strategy">
    insert into strategy (id, title, strategyIntroduce,
      image, isThemeTour, created,
      content)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{strategyIntroduce,jdbcType=VARCHAR},
      #{image,jdbcType=VARCHAR}, #{isThemeTour,jdbcType=CHAR}, #{created,jdbcType=VARCHAR},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
    <update id="update" parameterType="com.travel.entity.Strategy">
    update strategy
    set title = #{title,jdbcType=VARCHAR},
      strategyIntroduce = #{strategyIntroduce,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      isThemeTour = #{isThemeTour,jdbcType=CHAR},
      created = #{created,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>


</mapper>
